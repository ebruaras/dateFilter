@model IEnumerable<dbfirst.Table1>
@{
    ViewData["Title"] = "GetInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>GetInfo</h1>

@using (Html.BeginForm("GetInfo", "Home", FormMethod.Post))
{

    <input type="text" class="start" id="start" name="start" placeholder="Start Date" />
    <input type="text" class="end" id="end" name="end" placeholder="End Date" />
    <input type="submit" value="Search" />

}

<script>
    function populateEndDate() {
        var date2 = $('.start').datepicker('getDate');
        date2.setDate(date2.getDate() + 1);

        var today = new Date();
        var datetoday = today.getDate();
        today.setDate(datetoday);

        var date3 = $('.start').datepicker('getDate');
        date3.setDate(date3.getDate() + 5);
        
        $('.end').datepicker('setDate', date2);
        $(".end").datepicker("option", "minDate", date2);
      //  $(".end").datepicker("option", "maxDate", date3);

        if (date3 > today) {
            $(".end").datepicker("option", "maxDate", today);
        }
        else {
            $(".end").datepicker("option", "maxDate", date3);
        }

    }
    $(document).ready(function () {
        $(".start").datepicker({
            dateFormat: "dd-M-yy",
            


            onSelect: function (date) {
                populateEndDate();
            }
        }).datepicker("setDate", new Date());
        $('.end').datepicker({
            dateFormat: "dd-M-yy",
            onClose: function () {
                var dt1 = $('.start').datepicker('getDate');
                var dt2 = $('.end').datepicker('getDate');
                if (dt2 > dt1) {
                    var minDate = $('end').datepicker('option', 'minDate');
                    $('.end').datepicker('setDate', minDate);

                    
                }
               
            }
        }).datepicker("setDate", new Date());
    });
</script>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
        </tr>
        }
    </tbody>
</table>